CREATE TABLE rand_numeric (a int2, b int4, c int8, d float4, e float8, f real);
INSERT INTO rand_numeric
SELECT
    random() * 1000,
    random() * 1000,
    random() * 1000,
    random() * 1000,
    random() * 1000,
    random() * 1000
FROM
    generate_series(1, 100);

SELECT * FROM correlation();
DROP TABLE IF EXISTS corr_output, corr_output_summary;
SELECT * FROM correlation('rand_numeric', 'corr_output');
SELECT * FROM corr_output ORDER BY column_position;
DROP TABLE IF EXISTS corr_output, corr_output_summary;
SELECT * FROM correlation('rand_numeric', 'corr_output', ' ');
DROP TABLE IF EXISTS corr_output, corr_output_summary;
SELECT * FROM correlation('rand_numeric', 'corr_output', '');
DROP TABLE IF EXISTS corr_output, corr_output_summary;
SELECT * FROM correlation('rand_numeric', 'corr_output', Null);
DROP TABLE IF EXISTS corr_output, corr_output_summary;
SELECT * FROM correlation('rand_numeric', 'corr_output', 'a, c, e');

DROP TABLE IF EXISTS example_data;
CREATE TABLE example_data(
    id SERIAL, outlook TEXT,
    temperature FLOAT8, humidity FLOAT8,
    windy TEXT, class TEXT, new_col FLOAT8);
INSERT INTO example_data VALUES
(1, 'sunny', 85, 85, 'false', 'Dont Play', 1),
(2, 'sunny', 80, 90, 'true', 'Dont Play', 12),
(3, 'overcast', 83, 78, 'false', 'Play', 13),
(4, 'rain', 70, 96, 'false', 'Play', 16),
(5, 'rain', 68, 80, 'false', 'Play', 17),
(6, 'rain', 65, 70, 'true', 'Dont Play', 12),
(7, 'overcast', 64, 65, 'true', 'Play', 15),
(8, 'sunny', 72, 95, 'false', 'Dont Play', 19),
(9, 'sunny', 69, 70, 'false', 'Play', 20),
(10, 'rain', 75, 80, 'false', 'Play', 32),
(11, 'sunny', 75, 70, 'true', 'Play', 31),
(12, 'overcast', 72, 90, 'true', 'Play', 11),
(13, 'overcast', 81, 75, 'false', 'Play', 31),
(14, 'rain', 71, 80, 'true', 'Dont Play', 21),
(15, NULL, 100, 100, 'true', NULL, 11),
(16, NULL, 110, 100, 'true', NULL, 13);

--- example_data_output will have correlations of only two columns which do
--- not include any null columns in another columns
DROP TABLE IF EXISTS example_data_output, example_data_output_summary;
SELECT correlation( 'example_data',
                    'example_data_output',
                    'temperature, humidity, new_col',
                    True);
SELECT * FROM example_data_output;

INSERT INTO example_data VALUES (17, NULL, 110, 100, 'true', NULL, NULL);

--- example_data_output will have correlations of only three columns which does
--- include any columns. Hence if this
DROP TABLE IF EXISTS example_data_output_with_null_2column, example_data_output_with_null_2column_summary;
SELECT correlation( 'example_data',
                    'example_data_output_with_null_2column',
                    'temperature, humidity',
                    True);

SELECT * FROM example_data_output_with_null_2column;

DROP TABLE IF EXISTS example_data_output_with_null_3column, example_data_output_with_null_3column_summary;
SELECT correlation( 'example_data',
                    'example_data_output_with_null_3column',
                    'temperature, humidity, new_col',
                    True);
SELECT * FROM example_data_output_with_null_3column;

SELECT assert(ABS(a.temperature - b.temperature) < 0.000001,
       'Rows with NULL values are ignored.')
FROM
  example_data_output_with_null_2column a,
  example_data_output_with_null_3column b
WHERE a.column_position = 2 and b.column_position = 2;

SELECT assert(ABS(a.temperature - b.temperature) > 0.000001,
       'New row with NULL values is ignored.')
FROM
  example_data_output a,
  example_data_output_with_null_2column b
WHERE a.column_position = 2 and b.column_position = 2;

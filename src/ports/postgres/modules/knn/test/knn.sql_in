/* ----------------------------------------------------------------------- *//**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *	http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *//* ----------------------------------------------------------------------- */

m4_include(`SQLCommon.m4')
/* -----------------------------------------------------------------------------
 * Test knn.
 *
 * -------------------------------------------------------------------------- */

drop table if exists knn_train_data;
create table knn_train_data (
id  integer,
data	integer[],
label   integer);
copy knn_train_data (id, data, label) from stdin delimiter '|';
1|{1,1}|1
2|{2,2}|1
3|{3,3}|1
4|{4,4}|1
5|{4,5}|1
6|{20,50}|0
7|{10,31}|0
8|{81,13}|0
9|{1,111}|0
\.
DROP TABLE IF EXISTS knn_train_data_reg;
CREATE TABLE knn_train_data_reg (
					id integer,
					data integer[],
					label float
					);
COPY knn_train_data_reg (id, data, label) from stdin delimiter '|';
1|{1,1}|1.0
2|{2,2}|1.0
3|{3,3}|1.0
4|{4,4}|1.0
5|{4,5}|1.0
6|{20,50}|0.0
7|{10,31}|0.0
8|{81,13}|0.0
9|{1,111}|0.0
\.
DROP TABLE IF EXISTS knn_test_data;
create table knn_test_data (
id  integer,
data integer[]);
copy knn_test_data (id, data) from stdin delimiter '|';
1|{2,1}
2|{2,6}
3|{15,40}
4|{12,1}
5|{2,90}
6|{50,45}
\.
drop table if exists knn_train_data_expr;
create table knn_train_data_expr (
id  integer,
data1	integer,
data2    integer,
label   integer);
copy knn_train_data_expr (id, data1 , data2, label) from stdin delimiter '|';
1| 1  |  1  |1
2| 2  |  2  |1
3| 3  |  3  |1
4| 4  |  4   |1
5| 4  |  5   |1
6| 20 |  50  |0
7| 10 |  31  |0
8| 81 |  13  |0
9| 1  |  111 |0
\.



drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id','label','knn_test_data','data','id','madlib_knn_result_classification',3,False,'MADLIB_SCHEMA.squared_dist_norm2',False);
select assert(array_agg(prediction order by id)='{1,1,0,1,0,0}', 'Wrong output in classification with k=3') from madlib_knn_result_classification;

drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id','label','knn_test_data','data','id','madlib_knn_result_classification',3);
select assert(array_agg(x order by id)= '{1,2,3}','Wrong output in classification with k=3') from (select unnest(k_nearest_neighbours) as x, id from madlib_knn_result_classification where id = 1 order by x asc) y;

drop table if exists madlib_knn_result_regression;
select knn('knn_train_data_reg','data','id','label','knn_test_data','data','id','madlib_knn_result_regression',4,False,'MADLIB_SCHEMA.squared_dist_norm2',False);
select assert(array_agg(prediction order by id)='{1,1,0.5,1,0.25,0.25}', 'Wrong output in regression') from madlib_knn_result_regression;

drop table if exists madlib_knn_result_regression;
select knn('knn_train_data_reg','data','id','label','knn_test_data','data','id','madlib_knn_result_regression',3,True);
select assert(array_agg(x order by id)= '{1,2,3}' , 'Wrong output in regression with k=3') from (select unnest(k_nearest_neighbours) as x, id from madlib_knn_result_regression where id = 1 order by x asc) y;

drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id','label','knn_test_data','data','id','madlib_knn_result_classification',3,False,NULL,False);
select assert(array_agg(prediction order by id)='{1,1,0,1,0,0}', 'Wrong output in classification with k=3') from madlib_knn_result_classification;

drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id','label','knn_test_data','data','id','madlib_knn_result_classification',3,False,'MADLIB_SCHEMA.dist_norm1');
select assert(array_agg(prediction order by id)='{1,1,0,1,0,0}', 'Wrong output in classification with k=3') from madlib_knn_result_classification;

drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id','label','knn_test_data','data','id','madlib_knn_result_classification',3,False,'MADLIB_SCHEMA.dist_angle');
select assert(array_agg(prediction order by id)='{1,0,0,1,0,1}', 'Wrong output in classification with k=3') from madlib_knn_result_classification;

drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id','label','knn_test_data','data','id','madlib_knn_result_classification',3,False,'MADLIB_SCHEMA.dist_tanimoto');
select assert(array_agg(prediction order by id)='{1,1,0,1,0,0}', 'Wrong output in classification with k=3') from madlib_knn_result_classification;

drop table if exists madlib_knn_result_regression;
select knn('knn_train_data_reg','data','id','label','knn_test_data','data','id','madlib_knn_result_regression',4,False,'MADLIB_SCHEMA.dist_norm1');
select assert(array_agg(prediction order by id)='{1,1,0.5,1,0.25,0.25}', 'Wrong output in regression') from madlib_knn_result_regression;

drop table if exists madlib_knn_result_regression;
select knn('knn_train_data_reg','data','id','label','knn_test_data','data','id','madlib_knn_result_regression',4,False,'MADLIB_SCHEMA.dist_angle');
select assert(array_agg(prediction order by id)='{0.75,0.25,0.25,0.75,0.25,1}', 'Wrong output in regression') from madlib_knn_result_regression;


drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id','label','knn_test_data','data','id','madlib_knn_result_classification',3,False,'MADLIB_SCHEMA.squared_dist_norm2', True);
select assert(array_agg(prediction::numeric order by id)='{1,1,0,1,0,0}', 'Wrong output in classification with k=3') from madlib_knn_result_classification;


drop table if exists madlib_knn_result_regression;
select knn('knn_train_data_reg','data','id','label','knn_test_data','data','id','madlib_knn_result_regression',3,False,'MADLIB_SCHEMA.squared_dist_norm2', True);
select assert(array_agg(prediction::numeric order by id)='{1,1,0.0408728591876018,1,0,0}', 'Wrong output in regression') from madlib_knn_result_regression;


drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data[1:1]||data[2:2]','id','label','knn_test_data','data[1:1]||data[2:2]','id','madlib_knn_result_classification',3,False,'MADLIB_SCHEMA.squared_dist_norm2', True);
select assert(array_agg(prediction::numeric order by id)='{1,1,0,1,0,0}', 'Wrong output in classification') from madlib_knn_result_classification;

drop table if exists madlib_knn_result_regression;
select knn('knn_train_data_reg','data[1:1]||data[2:2]','id','label','knn_test_data','data[1:1]||data[2:2]','id','madlib_knn_result_regression',3,False,'MADLIB_SCHEMA.squared_dist_norm2', True);
select assert(array_agg(prediction::numeric order by id)='{1,1,0.0408728591876018,1,0,0}', 'Wrong output in regression') from madlib_knn_result_regression;




drop table if exists madlib_knn_result_classification;
select knn('knn_train_data_expr','ARRAY[data1,data2]','id','label','knn_test_data','data[1:1]||data[2:2]','id','madlib_knn_result_classification',3,False,'MADLIB_SCHEMA.squared_dist_norm2', True);
select assert(array_agg(prediction::numeric order by id)='{1,1,0,1,0,0}', 'Wrong output in classification') from madlib_knn_result_classification;



drop table if exists madlib_knn_result_classification;
select knn('knn_train_data','data','id',NULL,'knn_test_data','data','id','madlib_knn_result_classification',3);
select assert(array_agg(x order by id)= '{1,2,3}','Wrong output in classification with k=3') from (select unnest(k_nearest_neighbours) as x, id from madlib_knn_result_classification where id = 1 order by x asc) y;

select knn();
select knn('help');



drop table if exists knn_train_data2;
CREATE TABLE knn_train_data2 (
	id integer,
	data double precision[]
);
COPY knn_train_data2 (id, data) FROM stdin delimiter '|';
1|{43983,164834}
2|{491231,38953}
3|{587484,467668}
4|{882448,507209}
5|{17326,595844}
6|{236408,453230}
7|{283929,237605}
8|{392623,153808}
9|{267864,179054}
10|{428486,618138}
11|{963752,141363}
12|{980623,652584}
13|{398411,894748}
14|{559681,670919}
15|{297984,171933}
16|{254190,341966}
17|{336766,745420}
18|{380918,924250}
19|{213087,263365}
20|{431458,230413}
21|{859208,667865}
22|{683642,143136}
23|{905470,76265}
24|{296944,173333}
25|{255319,725429}
26|{791471,219070}
27|{866791,772094}
28|{871653,265202}
29|{666841,431334}
30|{936120,964824}
31|{603267,190309}
32|{306790,940033}
33|{935729,687708}
34|{864282,148815}
35|{951072,295739}
36|{379228,810280}
37|{963604,62869}
38|{953416,869073}
39|{139133,250360}
40|{42406,394452}
41|{975789,833877}
42|{613521,842579}
43|{605970,485173}
44|{107780,272810}
45|{916507,43900}
46|{237634,519773}
47|{234208,544424}
48|{459805,169937}
49|{232131,324086}
50|{318751,183202}
51|{619825,697978}
52|{993482,583428}
53|{760847,946898}
54|{452501,899980}
55|{197257,494907}
56|{294431,173045}
57|{328783,907951}
58|{15624,934752}
59|{393124,123404}
60|{207562,309630}
61|{167303,445196}
62|{829402,401511}
63|{989619,289207}
64|{571447,221749}
65|{613292,890198}
66|{404951,233116}
67|{588176,398433}
68|{816544,349023}
69|{345330,269045}
70|{249002,542587}
71|{763951,543433}
72|{715632,92734}
73|{451384,731255}
74|{27485,844507}
75|{854659,235047}
76|{154137,21962}
77|{680243,983539}
78|{423473,669861}
79|{272745,994920}
80|{891610,886037}
81|{885117,296561}
82|{119153,473293}
83|{694994,935696}
84|{822315,40323}
85|{204741,71317}
86|{582910,968691}
87|{614749,298541}
88|{61424,66132}
89|{29796,88909}
90|{910639,884455}
91|{323956,64775}
92|{906416,4198}
93|{48314,329888}
94|{674059,321058}
95|{324807,565669}
96|{207094,209924}
97|{862229,326247}
98|{683217,557222}
99|{261943,505531}
100|{597545,466683}
\.


CREATE TABLE knn_test_data2 (
    id integer NOT NULL,
    data integer[]
);

COPY knn_test_data2 (id, data) FROM stdin delimiter '|';
1|{576848,180455}
2|{435374,191597}
3|{478996,496797}
4|{257729,508791}
5|{585706,168367}
\.

drop table if exists madlib_knn_result_classification_st, madlib_knn_result_classification_kd;
select knn('knn_train_data2','data','id',NULL,'knn_test_data2','data','id','madlib_knn_result_classification_st',1,True,'MADLIB_SCHEMA.squared_dist_norm2',False, False);

select knn('knn_train_data2','data','id',NULL,'knn_test_data2','data','id','madlib_knn_result_classification_kd',1,True,'MADLIB_SCHEMA.squared_dist_norm2',False, True);

select assert(array_agg(t1.k_nearest_neighbours[1] order by t1.id) = array_agg(t2.k_nearest_neighbours[1] order by t2.id), 'Incorrect output in kd_tree enabled') from madlib_knn_result_classification_st as t1, madlib_knn_result_classification_kd as t2;
